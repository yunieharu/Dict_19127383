/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.IOException;

/**
 *
 * @author MSI GAMING
 */
public class MenuSlang extends javax.swing.JFrame {
    Slang_Word words = new Slang_Word();
    String [] Quiz_with_Word = new String [6];
    String [] Quiz_with_Defi = new String [6];

    /**
     * Creates new form NewJFrame
     */
    public MenuSlang() throws IOException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        reloadButton = new javax.swing.JButton();
        jTextArea1 = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        checkComboBox = new javax.swing.JComboBox<>();
        findButton = new javax.swing.JButton();
        dataTextField = new javax.swing.JTextField();
        searchPane = new javax.swing.JScrollPane();
        historyLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();

        jScrollPane2 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        randomButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        a1Button = new javax.swing.JButton();
        b1Button = new javax.swing.JButton();
        c1Button = new javax.swing.JButton();
        d1Button = new javax.swing.JButton();
        Create1Button = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        a2Button = new javax.swing.JButton();
        b2Button = new javax.swing.JButton();
        c2Button = new javax.swing.JButton();
        d2Button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Create2Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        checkComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Word", "Definition"  }));
        checkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkComboBoxActionPerformed(evt);
            }
        });

        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    findButtonActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        dataTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataTextFieldActionPerformed(evt);
            }
        });

        searchPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        searchPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        searchPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchPane.setDoubleBuffered(true);

        historyLabel.setText("History");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    addButtonActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(jList2);
        reloadButton.setText("Reload file root");
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    reloadButtonActionPerformed(evt);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(checkComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(findButton))
                                        .addComponent(searchPane, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(historyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(reloadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(checkComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(findButton)
                                        .addComponent(dataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(historyLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane4)
                                        .addComponent(searchPane, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(addButton)
                                        .addComponent(editButton)
                                        .addComponent(deleteButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reloadButton)
                                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Slang", jPanel1);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Random word");

        randomButton.setText("Click here to random");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(105, 105, 105)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(randomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(randomButton)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(205, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Random", jPanel2);

        jLabel3.setText("Question: ");

        a1Button.setText("A");
        a1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ButtonActionPerformed(evt);
            }
        });
        b1Button.setText("B");
        b1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ButtonActionPerformed(evt);
            }
        });

        c1Button.setText("C");
        c1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ButtonActionPerformed(evt);
            }
        });
        d1Button.setText("D");
        d1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d1ButtonActionPerformed(evt);
            }
        });
        Create1Button.setText("New question");
        Create1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create1ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(c1Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                        .addComponent(a1Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(b1Button, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                        .addComponent(d1Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(Create1Button))
                                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Create1Button)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(a1Button)
                                        .addComponent(b1Button))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(c1Button)
                                        .addComponent(d1Button))
                                .addContainerGap(180, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quiz1", jPanel4);

        a2Button.setText("A");
        a2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a2ButtonActionPerformed(evt);
            }
        });
        b2Button.setText("B");
        b2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ButtonActionPerformed(evt);
            }
        });

        c2Button.setText("C");
        c2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ButtonActionPerformed(evt);
            }
        });

        d2Button.setText("D");
        d2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d2ButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Question: ");

        Create2Button.setText("New question");
        Create2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create2ButtonActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel3Layout.createSequentialGroup()
                                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(c2Button, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                                .addComponent(a2Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(b2Button, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                                .addComponent(d2Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addComponent(Create2Button))
                                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Create2Button)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(a2Button)
                                        .addComponent(b2Button))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(c2Button)
                                        .addComponent(d2Button))
                                .addContainerGap(176, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quiz2", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void checkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        String value = checkComboBox.getSelectedItem().toString();
        if (value.equals("Word")){
            String temp = dataTextField.getText().toString();
            try {
                String []data = words.search_with_slang_word(temp);
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Word",data);
                JTable table = new JTable(model);
                searchPane.setViewportView(table);

                String [] His = words.loadFileHistory().toArray(new String[0]);

                jList2.setModel(new javax.swing.AbstractListModel<String>() {
                    public int getSize() { return His.length; }
                    public String getElementAt(int i) { return His[i]; }
                });
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        else {
            String temp = dataTextField.getText().toString();
            String [][]data = words.find_slang_word_with_keyword(temp);
            String[] header = { "Word", "KeyWord", "Definition" };
            JTable table = new JTable(data, header);
            table.setShowHorizontalLines(true);
            table.setGridColor(Color.orange);
            table.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
            searchPane.setViewportView(table);
            String [] His = words.loadFileHistory().toArray(new String[0]);

            jList2.setModel(new javax.swing.AbstractListModel<String>() {
                public int getSize() { return His.length; }
                public String getElementAt(int i) { return His[i]; }
            });
        }
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        JTextField xField = new JTextField(5);
        JTextField yField = new JTextField(10);


        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("Word:"));
        myPanel.add(xField);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel.add(new JLabel("Definition:"));
        myPanel.add(yField);
        int result = JOptionPane.showConfirmDialog(this, myPanel,
                "Please Enter Slang Word", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            System.out.println("Word: " + xField.getText());
            String word= xField.getText();
            String defi= yField.getText();
            System.out.println("Definition: " + yField.getText());
            if (words.check(word)){
                Object[] options = {"Overwrite", "Duplicate"};
                int n = JOptionPane.showOptionDialog(this,
                        "The word is existed in dictionary, PLEASE choose OVERWRITE or DUPLICATE",
                        "Word existed",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE,
                        null,     //do not use a custom Icon
                        options,  //the titles of buttons
                        options[0]);

                if(n == JOptionPane.YES_OPTION){
                    words.Overwrite_word(word,defi);
                    JOptionPane.showMessageDialog(this, "Overwrited " +word +" successfully");
                }else if (n == JOptionPane.NO_OPTION){
                    words.Duplicate_word(word,defi);
                    JOptionPane.showMessageDialog(this, "Duplicated " +word +" successfully");
                }else {
                }
            }
            else {
                words.Add_slang_word(word, defi);
                JOptionPane.showMessageDialog(this, "Added " +word +" successfully");
            }
        }
    }

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String word_del = JOptionPane.showInputDialog(this,"Please Enter Word to DELETE");
        if (word_del == null) {
            System.out.println("You didnt enter word");
        }
        else {
            if (words.check(word_del)){
                int dialogResult = JOptionPane.showConfirmDialog (null, "Are you sure to delete this word?","Warning",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(dialogResult == JOptionPane.YES_OPTION){
                    words.Delete_slang_word(word_del);
                    JOptionPane.showMessageDialog(this, word_del +" is deleted successfully");
                }
            }
            else {
                JOptionPane.showMessageDialog(this, word_del +" does not existed");
            }
        }
    }
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JTextField xField = new JTextField(5);
        JTextField yField = new JTextField(10);


        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("Word:"));
        myPanel.add(xField);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel.add(new JLabel("Definition:"));
        myPanel.add(yField);
        int result = JOptionPane.showConfirmDialog(this, myPanel,
                "Please Enter Slang Word you want to edit", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            System.out.println("Word: " + xField.getText());
            String word= xField.getText();
            String defi= yField.getText();
            System.out.println("Definition: " + yField.getText());
            if (words.check(word)){
                words.Edit_slang_word(word,defi);
                JOptionPane.showMessageDialog(this, "Edit " +word +" successfully");
            }
            else {
                JOptionPane.showMessageDialog(this, word +" does not existed");
            }
        }
    }
    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // TODO add your handling code here:
        words.Reload_fileroot();
        JOptionPane.showMessageDialog(this, "Reload file root successfully");
    }

    private void dataTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        String[] randomW = words.Random_word();
        jTextArea1.setText(randomW[0] +": "+randomW[1]);
    }
    private void Create1ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        a1Button.setBackground(Color.white);
        b1Button.setBackground(Color.white);
        c1Button.setBackground(Color.white);
        d1Button.setBackground(Color.white);

        Quiz_with_Word =words.Quiz_Word();
        jLabel3.setText("Question: Word   "+ Quiz_with_Word[0] +"  is that mean:");
        a1Button.setText(Quiz_with_Word[1]);
        b1Button.setText(Quiz_with_Word[2]);
        c1Button.setText(Quiz_with_Word[3]);
        d1Button.setText(Quiz_with_Word[4]);


    }
    boolean checkans(int x){
        if (Quiz_with_Word[x].contains(Quiz_with_Word[5]))
            return true;
        return false;
    }
    boolean checkans_2(int x){
        if (Quiz_with_Defi[x].contains(Quiz_with_Defi[5]))
            return true;
        return false;
    }
    private void a1ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (a1Button.getText().equals("A"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans(1)) {
                a1Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                a1Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }
    }
    private void b1ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (b1Button.getText().equals("B"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans(2)) {
                b1Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                b1Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }

    }
    private void c1ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (c1Button.getText().equals("C"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans(3)) {
               c1Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                c1Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }

    }
    private void d1ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (d1Button.getText().equals("D"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans(4)) {
                d1Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                d1Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }

    }
    private void Create2ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        a2Button.setBackground(Color.white);
        b2Button.setBackground(Color.white);
        c2Button.setBackground(Color.white);
        d2Button.setBackground(Color.white);

        Quiz_with_Defi=words.Quiz_Defi();
        jLabel2.setText("Question: "+ Quiz_with_Defi[0] +"  is the definition of..:");
        for (int i=0; i<6; i++)
            System.out.println(Quiz_with_Defi[i]);
        a2Button.setText(Quiz_with_Defi[1]);
        b2Button.setText(Quiz_with_Defi[2]);
        c2Button.setText(Quiz_with_Defi[3]);
        d2Button.setText(Quiz_with_Defi[4]);
    }
    private void a2ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (a2Button.getText().equals("A"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans_2(1)) {
                a2Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                a2Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }
    }
    private void b2ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (b2Button.getText().equals("B"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans_2(2)) {
                b2Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                b2Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }
    }

    private void c2ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (c2Button.getText().equals("C"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans_2(3)) {
                c2Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                c2Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }
    }

    private void d2ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if (d2Button.getText().equals("D"))
        {
            JOptionPane.showMessageDialog(this, "You have not created a question to choose the answer!");
        }
        else
        {
            if (checkans_2(4)) {
                d2Button.setBackground(Color.green);
                JOptionPane.showMessageDialog(this, "Correct Answer.");
            } else {
                d2Button.setBackground(Color.red);
                JOptionPane.showMessageDialog(this, "Incorrect.");
            }
        }
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuSlang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MenuSlang().setVisible(true);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton a1Button;
    private javax.swing.JButton a2Button;
    private javax.swing.JButton addButton;
    private javax.swing.JButton b1Button;
    private javax.swing.JButton b2Button;
    private javax.swing.JButton c1Button;
    private javax.swing.JButton c2Button;
    private javax.swing.JComboBox<String> checkComboBox;
    private javax.swing.JButton d1Button;
    private javax.swing.JButton d2Button;
    private javax.swing.JTextField dataTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel historyLabel;
    private javax.swing.JButton randomButton;
    private javax.swing.JButton Create1Button;
    private javax.swing.JButton Create2Button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane searchPane;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton reloadButton;
    // End of variables declaration
}
